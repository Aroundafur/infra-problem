AWSTemplateFormatVersion: '2010-09-09'
Description: This is a simple demonstration CloudFormation file.

# These parameters are set in an external file
Parameters:
  InstanceType:
     Description: "Instance type to use"
     Type: "String"
     Default: t2.micro
     AllowedValues:
       - t2.micro
       - m1.small
       - m1.large
     Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
      Description: "Name of an existing ssh keypair to use to access the instance"
      Type: "String"

# You can create lookups
Mappings:
  RegionMap:
    us-east-1:
      AMI: "ami-e13739f6"
    us-west-2:
      AMI: "ami-b7a114d7"

# A single EC2 instance
Resources:
  Ec2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType:
        Ref: "InstanceType"
      KeyName:
        Ref: "KeyName"
      SecurityGroups:
        - Ref: "InstanceSecurityGroup"
      ImageId:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AMI ]
      # User-data will execute commands on boot using cloud-init
      UserData: !Base64 |
        #!/bin/bash
        apt-get update -qq
        apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62
        sudo apt-add-repository ppa:ansible/ansible
        sudo apt-get update
        sudo apt-get install -y ansible
        ansible-playbook --connection=local 127.0.0.1 setup.yml
        cd /opt/infra-problem
        make libs
        cd front-end/public
        ./serve.py
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8000/ping)" != "200" ]]; do sleep 5; done
        
  # Create a security group for this instance that allows SSH and port 80
  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Open up SSH and HTTP to everyone on the Internet"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"

Outputs:
  PublicIP:
    Description: "The instance's public IP address"
    Value:
      !GetAtt Ec2Instance.PublicIp
